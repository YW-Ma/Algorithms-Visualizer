{"ast":null,"code":"import _regeneratorRuntime from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/src/app/component/Sidebar.js\";\nimport MyMenu from \"./MyMenu.js\";\nimport { Link } from 'react-router-dom'; //let layer = require(\"./app/layer/layer.js\");\n\nvar $ = window.jQuery;\n\nvar React = require(\"react\");\n\nwindow.algo = \"DFS\"; //保存选择的方法\n\nif (!window.algos) window.algos = [\"DFS\", \"dijkstra\"];\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  //它的属性来自APP类，见index.js\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n    _this.MARGIN_LEFT = 150;\n    _this.RIGHT = 10;\n    _this.state = {\n      right: 0,\n      marginLeft: 0,\n      search: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var nodes = this.props.node.map(function (node) {\n        var v = node.name;\n        return React.createElement(\"p\", {\n          key: v,\n          onClick: _this2.nodeClick.bind(_this2),\n          onContextMenu: _this2.ndoeMenuClick.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, v);\n      });\n      var algoDOM = window.algos.map(function (v, index) {\n        //if(index===0)window.algo = v;   注销此句，否则window.algo始终是window.algos的第一个算法\n        return React.createElement(\"option\", {\n          key: \"algo_\" + v,\n          value: v,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, v + \"算法\");\n      });\n      return React.createElement(\"div\", {\n        id: \"sidebar\",\n        style: {\n          marginLeft: this.state.marginLeft + \"px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input\",\n        value: this.state.search,\n        onChange: this.inputChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"searchOK\",\n        onClick: this.searchClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\")), React.createElement(\"div\", {\n        id: \"nodeList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, nodes), React.createElement(\"div\", {\n        id: \"algos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: this.handleSelect.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, algoDOM)), React.createElement(\"div\", {\n        id: \"confirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"confirmBtn\",\n        onClick: this.confirmClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\")), React.createElement(\"div\", {\n        id: \"reports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Link, {\n        id: \"mlink\",\n        to: \"reports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\\u62A5\\u8868\"))), React.createElement(\"div\", {\n        id: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"\\u9000\\u51FA\")), React.createElement(\"div\", {\n        className: \"drawer\",\n        style: {\n          right: this.state.right + \"px\"\n        },\n        onClick: this.close.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    } // 选择算法\n\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(event) {\n      console.log(event.target.value);\n      window.algo = event.target.value;\n      if (Object.is(window.algo, \"dijkstra\")) //dj算法需要显示距离(直接用等号判断相等存在问题，详见http://www.cnblogs.com/liaokaichang/p/7567433.html)\n        window.showDis = true;\n    } //关闭左栏\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.state.right !== 0) {\n        this.setState({\n          right: 0,\n          marginLeft: 0\n        });\n      } else {\n        this.setState({\n          right: -this.RIGHT,\n          marginLeft: -this.MARGIN_LEFT\n        });\n      }\n    } //监听输入框变换\n\n  }, {\n    key: \"inputChange\",\n    value: function inputChange(event) {\n      this.setState({\n        search: event.target.value\n      });\n    } //点击查询按钮\n\n  }, {\n    key: \"searchClick\",\n    value: function searchClick() {\n      window.map.clearOverlays(); //let str = this.state.search;   //注：jquery模拟鼠标点击时，不知道为什么无法更新输入框对应的状态(this.state.search)\n\n      var str = $(\"#input\").val(); //为了方便，只好直接使用jquery操作dom\n\n      window.localSearch.search(str); //百度地图查询的api见Map.js\n    } //左击 节点\n\n  }, {\n    key: \"nodeClick\",\n    value: function nodeClick() {} //右击 节点\n\n  }, {\n    key: \"ndoeMenuClick\",\n    value: function ndoeMenuClick(event) {\n      event.preventDefault();\n      /*\n      let nodeTitle = event.target.innerText;\n      let that = this;\n      let menu = new nw.Menu();\n      menu.append(new nw.MenuItem({\n      \tlabel: '移除',\n      \tclick: function(){\n                    let nodes = that.props.node;\n                    let index = nodes.findIndex(n=>{\n                        return n.name === nodeTitle;\n                    });\n                    if(index<0)return;\n                     nodes.splice(index, 1);\n                    that.props.updateState(nodes);\n      \t}\n      }));\n      menu.popup(event.clientX, event.clientY);*/\n\n      var nodeTitle = event.target.innerText;\n      var that = this;\n      var menu = new MyMenu(\"MyMenu_Node\");\n      menu.append([{\n        label: '移除',\n        click: function click() {\n          var nodes = that.props.node;\n          var index = nodes.findIndex(function (n) {\n            return n.name === nodeTitle;\n          });\n          if (index < 0) return;\n          nodes.splice(index, 1);\n          that.props.updateState(nodes);\n        }\n      }]);\n      menu.popup(event.clientX, event.clientY);\n      return false;\n    } //确认节点，点击后要开始搜索路径\n\n  }, {\n    key: \"confirmClick\",\n    value: function confirmClick(event) {\n      var _this3 = this;\n\n      window.map.clearOverlays();\n      window.layer.load(1, {\n        shade: [0.2, '#fff']\n      }); //清空\n\n      this.props.link.splice(0);\n      this.loadLinks();\n      setTimeout(function () {\n        return _this3.autoViewport();\n      }, 600);\n    } // 导入全部路线\n\n  }, {\n    key: \"loadLinks\",\n    value: function loadLinks() {\n      var that = this;\n\n      function load() {\n        return _load.apply(this, arguments);\n      }\n\n      function _load() {\n        _load = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var nodes, i, node1, j, node2, results;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  nodes = Array.from(that.props.node);\n                  i = 0;\n\n                case 2:\n                  if (!(i < nodes.length)) {\n                    _context.next = 18;\n                    break;\n                  }\n\n                  node1 = nodes[i];\n                  j = i + 1;\n\n                case 5:\n                  if (!(j < nodes.length)) {\n                    _context.next = 15;\n                    break;\n                  }\n\n                  node2 = nodes[j];\n                  console.log(node1.name + \"--->\" + node2.name);\n                  _context.next = 10;\n                  return that.loadLink(node1, node2);\n\n                case 10:\n                  results = _context.sent;\n                  that.onSearchComplete(results);\n\n                case 12:\n                  j++;\n                  _context.next = 5;\n                  break;\n\n                case 15:\n                  i++;\n                  _context.next = 2;\n                  break;\n\n                case 18:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        return _load.apply(this, arguments);\n      }\n\n      load().then(function () {\n        if (!window.repaint) window.layer.closeAll();\n      }).catch(function (err) {\n        /* global layer */\n        layer.closeAll();\n        console.log(err);\n        alert(err);\n      });\n    } // 导入路线数据\n\n  }, {\n    key: \"loadLink\",\n    value: function loadLink(node1, node2) {\n      var BMap = window.BMap; //add my me\n\n      var p1 = new BMap.Point(node1.lng, node1.lat);\n      var p2 = new BMap.Point(node2.lng, node2.lat);\n      return new Promise(function (resolve, reject) {\n        var drivingRoute = new BMap.DrivingRoute(window.map, {\n          renderOptions: {\n            map: null,\n            autoViewport: false\n          },\n          onSearchComplete: function onSearchComplete(results) {\n            //if(drivingRoute.getStatus()!==BMap.BMAP_STATUS_SUCCESS){\n            //reject(\"导入失败\");\n            //};      getStatus返回状态不正确，尚不知原因，暂时注释此部分\n            resolve({\n              results: results,\n              node1: node1,\n              node2: node2\n            });\n          }\n        });\n        drivingRoute.search(p1, p2);\n      });\n    } //重写searchRout，使其线性化\n\n  }, {\n    key: \"searchRoute\",\n    value: function searchRoute(point1, point2) {} // 搜索路线回调函数\n\n  }, {\n    key: \"onSearchComplete\",\n    value: function onSearchComplete(resultsObj) {\n      var results = resultsObj.results;\n      var node1 = resultsObj.node1;\n      var node2 = resultsObj.node2;\n      var plan = results.getPlan(0);\n      var dis = plan.getDistance(true);\n      var route = plan.getRoute(0);\n      var path = route.getPath();\n      var BMap = window.BMap; //add my me\n\n      var polyline = new BMap.Polyline(path);\n      window.map.addOverlay(polyline);\n      this.setLink(node1, node2, dis, polyline);\n    } // 设置路线到 main 的 state\n\n  }, {\n    key: \"setLink\",\n    value: function setLink(node1, node2, dis, polyline) {\n      var link = this.props.link;\n      link.push({\n        node1: node1,\n        node2: node2,\n        dis: dis,\n        polyline: polyline\n      });\n      this.props.updateState(null, link);\n    } //根据所选node设置最佳视图\n\n  }, {\n    key: \"autoViewport\",\n    value: function autoViewport() {\n      var ndoes = this.props.node; //console.log('nodes'+nodes);\n\n      var points = [];\n      ndoes.forEach(function (node) {\n        var BMap = window.BMap; //add my me\n\n        var point = new BMap.Point(node.lng, node.lat);\n        points.push(point); //添加marker\n\n        var marker = new BMap.Marker(point, {\n          title: node.name\n        });\n        var label = new BMap.Label(node.name, {\n          offset: new BMap.Size(20, -10)\n        });\n        marker.setLabel(label);\n        window.map.addOverlay(marker);\n      });\n      var viewport = window.map.getViewport(points);\n      window.map.centerAndZoom(viewport.center, viewport.zoom);\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nexport default Sidebar;","map":{"version":3,"sources":["/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/src/app/component/Sidebar.js"],"names":["MyMenu","Link","$","window","jQuery","React","require","algo","algos","Sidebar","props","MARGIN_LEFT","RIGHT","state","right","marginLeft","search","nodes","node","map","v","name","nodeClick","bind","ndoeMenuClick","algoDOM","index","inputChange","searchClick","handleSelect","confirmClick","close","event","console","log","target","value","Object","is","showDis","setState","clearOverlays","str","val","localSearch","preventDefault","nodeTitle","innerText","that","menu","append","label","click","findIndex","n","splice","updateState","popup","clientX","clientY","layer","load","shade","link","loadLinks","setTimeout","autoViewport","Array","from","i","length","node1","j","node2","loadLink","results","onSearchComplete","then","repaint","closeAll","catch","err","alert","BMap","p1","Point","lng","lat","p2","Promise","resolve","reject","drivingRoute","DrivingRoute","renderOptions","point1","point2","resultsObj","plan","getPlan","dis","getDistance","route","getRoute","path","getPath","polyline","Polyline","addOverlay","setLink","push","ndoes","points","forEach","point","marker","Marker","title","Label","offset","Size","setLabel","viewport","getViewport","centerAndZoom","center","zoom","Component"],"mappings":"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","sourcesContent":["import MyMenu from \"./MyMenu.js\";\nimport {Link} from 'react-router-dom';\n\n//let layer = require(\"./app/layer/layer.js\");\nlet $=window.jQuery;\n\nlet React = require(\"react\");\n\nwindow.algo = \"DFS\";  //保存选择的方法\n\nif(!window.algos)\n\twindow.algos = [\"DFS\",\"dijkstra\"];\n\n\n\n\nclass Sidebar extends React.Component{\n\n\t//它的属性来自APP类，见index.js\n    constructor(props){\n        super(props);\n\n        this.MARGIN_LEFT = 150;\n        this.RIGHT = 10;\n\n        this.state = {\n            right: 0,\n            marginLeft: 0,\n            search: \"\"\n\t\t};\n\t\t\n    }\n    render(){\n        let nodes = this.props.node.map(node=>{\n            let v = node.name;\n            return <p key={v} onClick={this.nodeClick.bind(this)} onContextMenu={this.ndoeMenuClick.bind(this)}>{v}</p>\n\t\t});\n\t\tlet algoDOM = window.algos.map((v, index)=>{\n\t\t\t//if(index===0)window.algo = v;   注销此句，否则window.algo始终是window.algos的第一个算法\n\t\t\treturn <option key={\"algo_\"+v} value={v}>{v+\"算法\"}</option>;\n\t\t});\n\n        return (\n            <div id=\"sidebar\" style={{marginLeft: this.state.marginLeft+\"px\"}}>\n                <div id=\"search\">\n\t\t\t\t\t\t<input type=\"text\" id=\"input\" value={this.state.search} onChange={this.inputChange.bind(this)}/>\n\t\t\t\t\t\t<button id=\"searchOK\" onClick={this.searchClick.bind(this)}>查询</button>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"nodeList\">\n                        {nodes}\n\t\t\t\t\t</div>\n\t\t\t\t<div id=\"algos\">\n\t\t\t\t\t\t<select onChange={this.handleSelect.bind(this)}>\n\t\t\t\t\t\t\t{algoDOM}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t<div id=\"confirm\">\n\t\t\t\t\t\t<button id=\"confirmBtn\" onClick={this.confirmClick.bind(this)}>确定</button>\n\t\t\t\t\t</div>\n\t\t\t\t<div id=\"reports\">\n\t\t\t\t\t<Link id=\"mlink\" to=\"reports\">\n\t\t\t\t\t<button onClick={()=>{}}>报表</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t<div id=\"info\">\n\t\t\t\t\t\t<button >退出</button>\n\t\t\t\t\t</div>\n                <div className=\"drawer\" style={{right: this.state.right+\"px\"}} onClick={this.close.bind(this)}></div>\n            </div>\n        );\n\t}\n\n\t// 选择算法\n\thandleSelect(event){\n\t\tconsole.log(event.target.value);\n\t\twindow.algo = event.target.value;\n\t\tif(Object.is(window.algo,\"dijkstra\"))  //dj算法需要显示距离(直接用等号判断相等存在问题，详见http://www.cnblogs.com/liaokaichang/p/7567433.html)\n\t\t\t\twindow.showDis=true;\t\t\n\t}\n\n    //关闭左栏\n    close(){\n        if(this.state.right!==0){\n            this.setState({\n                right: 0,\n                marginLeft: 0\n            });\n        }else{\n            this.setState({\n                right: -this.RIGHT,\n                marginLeft: -this.MARGIN_LEFT\n            });\n        }\n\t}\n\t\n    //监听输入框变换\n    inputChange(event){\n\t\tthis.setState({search: event.target.value});\n\t}\n\t\n    //点击查询按钮\n    searchClick(){\n        window.map.clearOverlays();\n\t\t//let str = this.state.search;   //注：jquery模拟鼠标点击时，不知道为什么无法更新输入框对应的状态(this.state.search)\n\t\tlet str=$(\"#input\").val();       //为了方便，只好直接使用jquery操作dom\n\t\twindow.localSearch.search(str);  //百度地图查询的api见Map.js\n    }\n    //左击 节点\n    nodeClick(){\n\n    }\n    //右击 节点\n    ndoeMenuClick(event){\n\t\tevent.preventDefault();\n\t\t/*\n\t\tlet nodeTitle = event.target.innerText;\n\t\tlet that = this;\n\t\tlet menu = new nw.Menu();\n\t\tmenu.append(new nw.MenuItem({\n\t\t\tlabel: '移除',\n\t\t\tclick: function(){\n                let nodes = that.props.node;\n                let index = nodes.findIndex(n=>{\n                    return n.name === nodeTitle;\n                });\n                if(index<0)return;\n\n                nodes.splice(index, 1);\n                that.props.updateState(nodes);\n\t\t\t}\n\t\t}));\n\t\tmenu.popup(event.clientX, event.clientY);*/\n\t\t\n\t\tlet nodeTitle = event.target.innerText;\n\t\tlet that = this;\n\t\tlet menu = new MyMenu(\"MyMenu_Node\");\n\t\tmenu.append([{\n\t\t\tlabel: '移除',\n\t\t\tclick: function(){\n                let nodes = that.props.node;\n                let index = nodes.findIndex(n=>{\n                    return n.name === nodeTitle;\n                });\n                if(index<0)return;\n\n                nodes.splice(index, 1);\n                that.props.updateState(nodes);\n\t\t\t}\n\t\t}]);\n\t\tmenu.popup(event.clientX, event.clientY);\n\t\t\n\t\treturn false;\n\t}\n\t\n    //确认节点，点击后要开始搜索路径\n    confirmClick(event){\n\t\twindow.map.clearOverlays();\n        window.layer.load(1, {shade: [0.2,'#fff']});\n        //清空\n        this.props.link.splice(0);\n\t\tthis.loadLinks();\n\t\tsetTimeout(()=>this.autoViewport(), 600);\n\t}\n\t\n\t// 导入全部路线\n\tloadLinks(){\n\t\tlet that = this;\n\t\tasync function load(){\n\t\t\tlet nodes = Array.from(that.props.node);\n\t\t\tfor(let i=0;i<nodes.length;i++){\n\t\t\t\tlet node1 = nodes[i];\n\t\t\t\tfor(let j=i+1;j<nodes.length;j++){\n\t\t\t\t\tlet node2 = nodes[j];\n\t\n\t\t\t\t\tconsole.log(node1.name+\"--->\"+node2.name);\n\t\n\t\t\t\t\tlet results = await that.loadLink(node1,node2);\n\t\t\t\t\tthat.onSearchComplete(results);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tload()\n\t\t.then(()=>{\n\t\t\tif(!window.repaint)                  \n\t\t\t\twindow.layer.closeAll();\n\t\t\t\n\t\t})\n\t\t.catch(err=>{\n\t\t\t /* global layer */\n            layer.closeAll();\n            console.log(err);\n\t\t\talert(err);\n\t\t});\n\t}\n\t// 导入路线数据\n\tloadLink(node1, node2){\n\t\tvar BMap = window.BMap;    //add my me\n\t\tvar p1 = new BMap.Point(node1.lng, node1.lat);\n\t\tvar p2 = new BMap.Point(node2.lng, node2.lat);\n\n\t\treturn new Promise((resolve, reject)=>{\n\t\t\tlet drivingRoute = new BMap.DrivingRoute(window.map, {renderOptions:{map: null, autoViewport: false}, onSearchComplete:(results)=>{\n\t\t\t\t//if(drivingRoute.getStatus()!==BMap.BMAP_STATUS_SUCCESS){\n\t\t\t\t\t//reject(\"导入失败\");\n\t\t\t\t//};      getStatus返回状态不正确，尚不知原因，暂时注释此部分\n\t\t\t\tresolve({results, node1, node2});\n\t\t\t}});\n\t\t\tdrivingRoute.search(p1, p2);\n\t\t});\n\t}\n\n\t//重写searchRout，使其线性化\n\tsearchRoute(point1, point2){\n\t}\n\n\t// 搜索路线回调函数\n\tonSearchComplete(resultsObj){\n        let results = resultsObj.results;\n        let node1 = resultsObj.node1;\n        let node2 = resultsObj.node2;\n        \n\t\tlet plan = results.getPlan(0);\n\t\tlet dis = plan.getDistance(true);\n\t\tlet route = plan.getRoute(0);\n\t\tlet path = route.getPath();\n\t\tvar BMap = window.BMap;    //add my me\n\t\tlet polyline = new BMap.Polyline(path);\n\t\twindow.map.addOverlay(polyline);\n\t\t\n\t\tthis.setLink(node1, node2, dis, polyline);\n\t}\n\n\t// 设置路线到 main 的 state\n\tsetLink(node1, node2, dis, polyline){\n        let link = this.props.link;\n        link.push({node1, node2, dis, polyline});\n        this.props.updateState(null, link);\n\t}\n\t\n\t//根据所选node设置最佳视图\n\tautoViewport(){\n\t\tlet ndoes = this.props.node;\n\t\t//console.log('nodes'+nodes);\n\t\tlet points = [];\n\t\tndoes.forEach(node=>{\n\t\t\tvar BMap = window.BMap;    //add my me\n\t\t\tlet point = new BMap.Point(node.lng, node.lat);\n\t\t\tpoints.push(point);\n\t\t\t//添加marker\n\t\t\tlet marker = new BMap.Marker(point, {title: node.name}); \t\n\t\t\tlet label = new BMap.Label(node.name, {offset:new BMap.Size(20,-10)});\n\t\t\tmarker.setLabel(label);\n\t\t\twindow.map.addOverlay(marker);\n\t\t});\n\t\tlet viewport = window.map.getViewport(points);\n\t\twindow.map.centerAndZoom(viewport.center, viewport.zoom);\n\t}\n}\n\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}