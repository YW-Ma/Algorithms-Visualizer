{"ast":null,"code":"import _classCallCheck from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/src/app/routes/MainInterface.js\";\n//引入三个组件  \nimport Map from \"../component/Map.js\";\nimport Sidebar from \"../component/Sidebar.js\";\nimport Panel from \"../component/Panel.js\";\nimport { Repaint } from \"../SimulateClickEvent\"; //引入jQuery  (换到了html中引入)\n//let $ = require(\"jquery\");\n//window.$ = $;\n//window.jQuery = $;\n//引入自定义样式\n\nrequire(\"../../css/map.new.css\"); //引入layer.js\n//require(\"./app/layer/skin/default/layer.css\");\n//let layer = require(\"./app/layer/layer.js\");\n//window.layer = layer;\n\n\nvar React = require(\"react\"); //引入React \n\n\nvar MainInterface =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MainInterface, _React$Component);\n\n  function MainInterface(props) {\n    var _this;\n\n    _classCallCheck(this, MainInterface);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainInterface).call(this, props)); //alert(this.props.location.state.visitID);\n\n    _this.state = {\n      node: [],\n      link: []\n    };\n    return _this;\n  }\n\n  _createClass(MainInterface, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        updateState: this.updateState.bind(this),\n        node: this.state.node,\n        link: this.state.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Map, {\n        updateState: this.updateState.bind(this),\n        node: this.state.node,\n        link: this.state.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Panel, {\n        updateState: this.updateState.bind(this),\n        node: this.state.node,\n        link: this.state.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //alert(window.repaint);\n      if (window.repaint) {\n        Repaint();\n      }\n    }\n    /**\n     * 更新node和link的回调函数\n     * @param {*} node \n     * @param {*} link \n     */\n\n  }, {\n    key: \"updateState\",\n    value: function updateState(node, link) {\n      var oldNode = this.state.node;\n      var oldLink = this.state.link;\n      this.setState({\n        node: node || oldNode,\n        //当结果为真时，返回第一个为真的值\n        link: link || oldLink\n      });\n    }\n  }]);\n\n  return MainInterface;\n}(React.Component);\n\nexport default MainInterface;","map":{"version":3,"sources":["/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/src/app/routes/MainInterface.js"],"names":["Map","Sidebar","Panel","Repaint","require","React","MainInterface","props","state","node","link","updateState","bind","window","repaint","oldNode","oldLink","setState","Component"],"mappings":";;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,SAAQC,OAAR,QAAuB,uBAAvB,C,CAEA;AACA;AACA;AACA;AAEA;;AACAC,OAAO,CAAC,uBAAD,CAAP,C,CACA;AACA;AACA;AACA;;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB,C,CAAkD;;;IAG5CE,a;;;;;AACF,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,uFAAMA,KAAN,GADc,CAEd;;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAHc;AAOjB;;;;6BAEO;AACJ,aACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAtB;AAAmD,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAApE;AAA0E,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,GAAD;AAAK,QAAA,WAAW,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAlB;AAA+C,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAAhE;AAAsE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAApB;AAAiD,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAAlE;AAAwE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAOH;;;wCAGD;AACI;AACA,UAAGG,MAAM,CAACC,OAAV,EACA;AACIX,QAAAA,OAAO;AACV;AAGJ;AAED;;;;;;;;gCAKYM,I,EAAMC,I,EAAK;AACnB,UAAIK,OAAO,GAAG,KAAKP,KAAL,CAAWC,IAAzB;AACA,UAAIO,OAAO,GAAG,KAAKR,KAAL,CAAWE,IAAzB;AACA,WAAKO,QAAL,CAAc;AACVR,QAAAA,IAAI,EAAEA,IAAI,IAAIM,OADJ;AACc;AACxBL,QAAAA,IAAI,EAAEA,IAAI,IAAIM;AAFJ,OAAd;AAIH;;;;EA3CuBX,KAAK,CAACa,S;;AA8ClC,eAAeZ,aAAf","sourcesContent":["//引入三个组件  \nimport Map from \"../component/Map.js\";   \nimport Sidebar from \"../component/Sidebar.js\";\nimport Panel from \"../component/Panel.js\";\n\nimport {Repaint}  from \"../SimulateClickEvent\" \n\n//引入jQuery  (换到了html中引入)\n//let $ = require(\"jquery\");\n//window.$ = $;\n//window.jQuery = $;\n\n//引入自定义样式\nrequire(\"../../css/map.new.css\");\n//引入layer.js\n//require(\"./app/layer/skin/default/layer.css\");\n//let layer = require(\"./app/layer/layer.js\");\n//window.layer = layer;\nlet React = require(\"react\");                     //引入React \n\n\nclass MainInterface extends React.Component{\n    constructor(props){\n        super(props);       \n        //alert(this.props.location.state.visitID);\n        this.state = {\n            node: [],\n            link: []\n        };\n    }\n\n    render(){\n        return (\n            <div id=\"container\">\n                <Sidebar updateState={this.updateState.bind(this)} node={this.state.node} link={this.state.link}/>\n                <Map updateState={this.updateState.bind(this)} node={this.state.node} link={this.state.link}/>\n                <Panel updateState={this.updateState.bind(this)} node={this.state.node} link={this.state.link}/>\n            </div>\n        );\n    }\n\n    componentDidMount()\n    { \n        //alert(window.repaint);\n        if(window.repaint)\n        {\n            Repaint();\n        }\n       \n    \n    }\n\n    /**\n     * 更新node和link的回调函数\n     * @param {*} node \n     * @param {*} link \n     */\n    updateState(node, link){\n        let oldNode = this.state.node;\n        let oldLink = this.state.link;\n        this.setState({\n            node: node || oldNode,  //当结果为真时，返回第一个为真的值\n            link: link || oldLink\n        });\n    }\n}\n\nexport default MainInterface;\n"]},"metadata":{},"sourceType":"module"}