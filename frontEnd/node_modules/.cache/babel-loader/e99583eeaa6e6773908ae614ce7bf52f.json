{"ast":null,"code":"import _classCallCheck from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/src/app/reports-component/BodyInfo.js\";\nimport eventProxy from \"../eventProxy.js\";\nimport { Link } from 'react-router-dom';\n\nvar React = require(\"react\"); //const $=window. window.jQuery;  \n//const jsdom = require('jsdom');          \n//const { JSDOM } = jsdom;\n//const { document } = (new JSDOM('<!doctype html><html><body></body></html>')).window;\n//global.document = document;\n//global.window = document.defaultView;\n//const $ = require('jquery')(window);\n\n\nvar $ = window.window.jQuery; //node.js添加jquery失败了，改为在index.html中cdn引入\n\nvar actions;\n\nvar BodyInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BodyInfo, _React$Component);\n\n  function BodyInfo(props) {\n    var _this;\n\n    _classCallCheck(this, BodyInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BodyInfo).call(this, props));\n    _this.state = {\n      content: \"action\"\n    }; //默认显示动作表\n\n    _this.onSelectChange = _this.onSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); //如果你不绑定方法，那么在事件发生并且精确调用这个方法时，方法内部的this会丢失指向。\n\n    return _this;\n  }\n\n  _createClass(BodyInfo, [{\n    key: \"render\",\n    value: function render() {\n      var content = this.setContent();\n      return React.createElement(\"div\", {\n        id: \"bodyArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, content);\n    }\n  }, {\n    key: \"onSelectChange\",\n    value: function onSelectChange(contentType) {\n      this.setState({\n        content: contentType\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //挂载时开始监听\n      eventProxy.on(window.contentType, this.onSelectChange);\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent() {\n      switch (this.state.content) {\n        case \"action\":\n          return this.renderAction();\n          break;\n\n        case \"que\":\n          return this.renderQue();\n          break;\n      }\n\n      return \"ERROR\";\n    } //显示访问记录（每一次的动作只显示一栏!!!!，展开之后才显示详细动作）\n\n  }, {\n    key: \"renderAction\",\n    value: function renderAction() {\n      //let actions;\n      $.ajax({\n        url: \"http://localhost:3001/actions\",\n        type: 'GET',\n        data: {},\n        async: false,\n        //同步！！\n        success: function success(json) {\n          actions = json.actions; //alert(actions[0].visitID);\n        },\n        error: function error() {\n          alert('获取访问记录信息失败!');\n        }\n      });\n      var tableContent = actions.map(function (action, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          id: 'visit' + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, action.visitID), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, action.algorithm), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(ButtonSpread, {\n          visitID: action.visitID,\n          trID: 'visit' + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(ButtonRenew, {\n          visitID: action.visitID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"table\", {\n        id: \"mtable\",\n        border: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"\\u8BBF\\u95EE\\u5E8F\\u53F7\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"\\u7B97\\u6CD5\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"\\u5C55\\u5F00/\\u6536\\u8D77\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"\\u573A\\u666F\\u518D\\u73B0\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, tableContent));\n    }\n  }, {\n    key: \"renderQue\",\n    value: function renderQue() {\n      var ques;\n      $.ajax({\n        url: \"http://localhost:3001/getQues\",\n        type: 'GET',\n        data: {},\n        async: false,\n        //同步！！\n        success: function success(json) {\n          ques = json.ques;\n        },\n        error: function error() {\n          alert('获取访问记录信息失败!');\n        }\n      });\n      var quesContent = ques.map(function (que, index) {\n        var judge = \"正确\";\n        if (que.msg != que.ans) judge = \"错误\";\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, que.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, que.type), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, que.que), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, que.msg), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, que.ans), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, judge), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, que.visitID), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(ButtonRenew, {\n          visitID: que.visitID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"table\", {\n        id: \"mtable\",\n        border: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"\\u5E8F\\u53F7\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"\\u7C7B\\u578B\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"\\u95EE\\u9898\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u56DE\\u7B54\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"\\u7B54\\u6848\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"\\u6B63\\u8BEF\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\u8BBF\\u95EE\\u53F7\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\\u60C5\\u666F\\u518D\\u73B0\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, quesContent));\n    }\n  }]);\n\n  return BodyInfo;\n}(React.Component); //点击这个按钮展开动作表\n\n\nvar ButtonSpread =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ButtonSpread, _React$Component2);\n\n  //需要有一个属性：visitID,用于查询动作信息\n  //需要有一个属性:trID,即该行表格的id，用于在该表格后面添加展开的表格\n  function ButtonSpread(props) {\n    var _this2;\n\n    _classCallCheck(this, ButtonSpread);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ButtonSpread).call(this, props));\n    _this2.state = {\n      isQueryed: false,\n      //是否已经查询数据库\n      isSpreaded: false //是否已经展开\n\n    };\n    return _this2;\n  }\n\n  _createClass(ButtonSpread, [{\n    key: \"render\",\n    value: function render() {\n      var text = \"展开\";\n      if (this.state.isSpreaded) text = \"收起\";\n      return React.createElement(\"button\", {\n        onClick: this.onClickButton.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, text);\n    }\n  }, {\n    key: \"onClickButton\",\n    value: function onClickButton() {\n      if (this.state.isQueryed) //如果已经查询过数据库，直接显示内容\n        {\n          if (this.state.isSpreaded) //如果已经展开，直接隐藏\n            {\n              $('#table' + this.props.visitID).hide();\n              this.setState({\n                isSpreaded: false\n              });\n            } else {\n            //尚未展开，显示内容\n            $('#table' + this.props.visitID).show();\n            this.setState({\n              isSpreaded: true\n            });\n          }\n        } else //尚未查询数据库，查询数据并添加内容\n        {\n          var _visitID = this.props.visitID;\n          var actionDetails;\n          $.ajax({\n            url: 'http://localhost:3001/actionDetails',\n            type: 'POST',\n            data: {\n              visitID: _visitID\n            },\n            async: false,\n            success: function success(json) {\n              actionDetails = json.actionDetails;\n            },\n            error: function error() {\n              alert(\"获取动作表信息失败!\");\n            }\n          }); //alert(actionDetails[0].content);\n\n          var addTableHead = \"<thead><tr>  <th>动作号</th> <th>内容</th> <th>动作类型</th> <th>帧号</th>  </tr></thead>\";\n          var addTableBodyContent = '';\n          actionDetails.map(function (action, index) {\n            var line = \"<tr key=\" + index + \">\";\n            line += \"<td>\" + action.actionID + \"</td>\";\n            line += \"<td>\" + action.content + \"</td>\";\n            line += \"<td>\" + action.type + \"</td>\";\n            line += \"<td>\" + action.stepID + \"</td>\";\n            line += \"</tr>\";\n            addTableBodyContent += line;\n          });\n          var addTableBody = '<tbody>' + addTableBodyContent + '</tbody>';\n          var addTable = '<table id=table' + this.props.visitID + ' border=1>' + addTableHead + addTableBody + '</table>';\n          $('#' + this.props.trID).after(addTable);\n          this.setState({\n            isQueryed: true\n          });\n          this.setState({\n            isSpreaded: true\n          });\n        }\n    }\n  }]);\n\n  return ButtonSpread;\n}(React.Component); //点击按钮跳回算法演示界面\n\n\nvar ButtonRenew =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(ButtonRenew, _React$Component3);\n\n  function ButtonRenew(props) {\n    _classCallCheck(this, ButtonRenew);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ButtonRenew).call(this, props)); //this.props.visitID, 含有这个属性，用于传递访问编号，页面跳转后读取数据库，演示动作\n  }\n\n  _createClass(ButtonRenew, [{\n    key: \"render\",\n    value: function render() {\n      //let visitID=this.props.visitID;\n      return React.createElement(Link, {\n        to: {\n          pathname: '/',\n          state: {\n            panelState: 'open',\n            visitID: visitID\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onBtnClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"\\u8FDB\\u5165\"));\n    }\n  }, {\n    key: \"onBtnClick\",\n    value: function onBtnClick() {\n      window.repaint = true;\n    }\n  }]);\n\n  return ButtonRenew;\n}(React.Component);\n\nexport default BodyInfo;","map":{"version":3,"sources":["/home/cdz/Code/FrontEnd/algorithm-visualization-for-Mr-Huang/frontEnd/src/app/reports-component/BodyInfo.js"],"names":["eventProxy","Link","React","require","$","window","jQuery","actions","BodyInfo","props","state","content","onSelectChange","bind","setContent","contentType","setState","on","renderAction","renderQue","ajax","url","type","data","async","success","json","error","alert","tableContent","map","action","index","visitID","algorithm","ques","quesContent","que","judge","msg","ans","id","Component","ButtonSpread","isQueryed","isSpreaded","text","onClickButton","hide","show","actionDetails","addTableHead","addTableBodyContent","line","actionID","stepID","addTableBody","addTable","trID","after","ButtonRenew","pathname","panelState","onBtnClick","repaint"],"mappings":"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","sourcesContent":["import eventProxy from \"../eventProxy.js\"\nimport {Link} from 'react-router-dom';\nlet React = require(\"react\");\n//const $=window. window.jQuery;  \n//const jsdom = require('jsdom');          \n//const { JSDOM } = jsdom;\n//const { document } = (new JSDOM('<!doctype html><html><body></body></html>')).window;\n//global.document = document;\n//global.window = document.defaultView;\n//const $ = require('jquery')(window);\nconst $=window. window.jQuery;              //node.js添加jquery失败了，改为在index.html中cdn引入\n\nlet actions;\n\nclass BodyInfo extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            content:\"action\"    \n        };   //默认显示动作表\n        this.onSelectChange=this.onSelectChange.bind(this);  //如果你不绑定方法，那么在事件发生并且精确调用这个方法时，方法内部的this会丢失指向。\n    }\n\n    render()\n    {\n        let content=this.setContent();\n        return(\n            <div id=\"bodyArea\">\n              {content}\n            </div>\n        );\n    }\n\n    onSelectChange(contentType){  \n        this.setState({content:contentType});\n    }\n\n    componentDidMount(){                             //挂载时开始监听\n        eventProxy.on(window.contentType,this.onSelectChange);  \n    }\n\n    setContent(){\n        switch(this.state.content){\n            case \"action\":\n                return this.renderAction();\n                break;\n            case \"que\":\n                return this.renderQue();\n                break;\n        }\n        return \"ERROR\";\n    }\n\n    //显示访问记录（每一次的动作只显示一栏!!!!，展开之后才显示详细动作）\n    renderAction(){\n        //let actions;\n        $.ajax({\n            url:\"http://localhost:3001/actions\",\n            type:'GET',\n            data:{},\n            async:false,                         //同步！！\n            success:function(json){\n                actions=json.actions;\n                //alert(actions[0].visitID);\n            },\n            error:function(){\n                alert('获取访问记录信息失败!');\n            }\n        });\n       \n\n        let tableContent=actions.map((action,index)=>{\n            return(\n                <tr key={index} id={'visit'+index}>\n                    <td align=\"center\">{action.visitID}</td>\n                    <td align=\"center\">{action.algorithm}</td>\n                    <td align=\"center\"><ButtonSpread visitID={action.visitID} trID={'visit'+index}/></td>\n                    <td align=\"center\"><ButtonRenew visitID={action.visitID}/></td>\n                </tr>\n            )\n        });\n\n        return(\n            <table id=\"mtable\" border=\"1\">\n            <thead>\n                <tr>\n                    <th>访问序号</th>\n                    <th>算法</th>\n                    <th>展开/收起</th>\n                    <th>场景再现</th>\n                </tr>\n            </thead>\n           \n            <tbody>\n                {tableContent}\n            </tbody>\n                \n            </table>\n        );\n    }\n\n\n    renderQue(){\n        let ques;\n        $.ajax({\n            url:\"http://localhost:3001/getQues\",\n            type:'GET',\n            data:{},\n            async:false,                         //同步！！\n            success:function(json){\n                ques=json.ques;\n            },\n            error:function(){\n                alert('获取访问记录信息失败!');\n            }\n        });\n\n        let quesContent=ques.map((que,index)=>{\n            var judge=\"正确\";\n            if(que.msg!=que.ans)\n                judge=\"错误\";\n            return(\n                <tr key={index}>\n                    <td>{que.id}</td>\n                    <td>{que.type}</td>\n                    <td>{que.que}</td>\n                    <td>{que.msg}</td>\n                    <td>{que.ans}</td>\n                    <td>{judge}</td>\n                    <td>{que.visitID}</td>\n                    <td><ButtonRenew visitID={que.visitID}/></td>\n                </tr>\n            );\n        });\n\n        return(\n            <table id=\"mtable\" border=\"1\">\n                <thead>\n                    <tr>\n                        <th>序号</th>\n                        <th>类型</th>\n                        <th>问题</th>\n                        <th>回答</th>\n                        <th>答案</th>\n                        <th>正误</th>\n                        <th>访问号</th>\n                        <th>情景再现</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {quesContent}\n                </tbody>\n            </table>\n        );\n    }\n}\n\n\n//点击这个按钮展开动作表\nclass ButtonSpread extends React.Component{\n     //需要有一个属性：visitID,用于查询动作信息\n     //需要有一个属性:trID,即该行表格的id，用于在该表格后面添加展开的表格\n    constructor(props){  \n        super(props);\n        this.state={\n            isQueryed:false,                  //是否已经查询数据库\n            isSpreaded:false,                 //是否已经展开\n        }\n    }\n\n    render(){\n        let text=\"展开\";\n        if(this.state.isSpreaded)\n            text=\"收起\";\n        return(\n            <button onClick={this.onClickButton.bind(this)}>{text}</button>\n        );\n    }\n\n    onClickButton(){\n        if(this.state.isQueryed)         //如果已经查询过数据库，直接显示内容\n        {\n            if(this.state.isSpreaded) //如果已经展开，直接隐藏\n            {\n                $('#table'+this.props.visitID).hide();\n                this.setState({isSpreaded:false});\n            }\n            else{                    //尚未展开，显示内容\n                $('#table'+this.props.visitID).show();\n                this.setState({isSpreaded:true});\n            }\n        }\n        else             //尚未查询数据库，查询数据并添加内容\n        {\n            let visitID=this.props.visitID;\n            let actionDetails;\n            $.ajax({\n                url:'http://localhost:3001/actionDetails',\n                type:'POST',\n                data:{visitID},\n                async:false,\n                success:function(json){\n                    actionDetails=json.actionDetails;\n                },\n                error:function(){\n                    alert(\"获取动作表信息失败!\");\n                }\n            });\n            //alert(actionDetails[0].content);\n            let addTableHead=\"<thead><tr>  <th>动作号</th> <th>内容</th> <th>动作类型</th> <th>帧号</th>  </tr></thead>\";\n            let addTableBodyContent='';\n            actionDetails.map((action,index)=>{\n                let line=\"<tr key=\"+index+\">\";\n                line+=\"<td>\"+action.actionID+\"</td>\";\n                line+=\"<td>\"+action.content+\"</td>\";\n                line+=\"<td>\"+action.type+\"</td>\";\n                line+=\"<td>\"+action.stepID+\"</td>\";\n                line+=\"</tr>\";\n               addTableBodyContent+=line;\n            });\n            let addTableBody='<tbody>'+addTableBodyContent+'</tbody>';\n            let addTable='<table id=table'+this.props.visitID+' border=1>'+addTableHead+addTableBody+'</table>';\n            $('#'+this.props.trID).after(addTable);\n            this.setState({isQueryed:true});\n            this.setState({isSpreaded:true});\n        }\n    }\n\n\n}\n\n\n//点击按钮跳回算法演示界面\nclass ButtonRenew extends React.Component{\n    constructor(props)\n    {\n        super(props);\n        //this.props.visitID, 含有这个属性，用于传递访问编号，页面跳转后读取数据库，演示动作\n    }\n\n    render(){\n        //let visitID=this.props.visitID;\n        return(\n            <Link to={{pathname:'/',state:{panelState:'open',visitID:visitID}}}><button  onClick={this.onBtnClick.bind(this)}>进入</button></Link>\n        );\n    }\n\n    onBtnClick()\n    {\n        window.repaint=true;\n    }\n}\n\nexport default BodyInfo;"]},"metadata":{},"sourceType":"module"}